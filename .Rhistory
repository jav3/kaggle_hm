gc()
?is.numeric.difftime
is.numeric.difftime(today())
is.numeric.difftime(difftime(today(), today() + 1))
difftime(today(), today() + 1)
is.numeric.difftime(difftime(Sys.Date(), Sys.Date() + 1))
(difftime(Sys.Date(), Sys.Date() + 1))
class(difftime(Sys.Date(), Sys.Date() + 1))
is.difftime(difftime(Sys.Date(), Sys.Date() + 1))
x = NULL
!is.null(x) & !is.na(x) & length(x) > 0
length(!is.null(x) & !is.na(x) & length(x) > 0)
x = NA
length(!is.null(x) & !is.na(x) & length(x) > 0)
!is.null(x) & !is.na(x) & length(x) > 0
missing(NULL)
x = NA
!is.na(x) & !is.null(x)
x = 1
!is.na(x) & !is.null(x)
!(NA %in% c(0, 100))
library(igraph)
aa = make_graph(10)
aa = make_graph(n = 10)
?make_graph
aa = make_graph("Tetrahedron")
membership(aa)
plot(aa)
make_graph(c(1, 2, 2, 3, 3, 4, 5, 6), directed = FALSE)
aa = make_graph(c(1, 2, 2, 3, 3, 4, 5, 6), directed = FALSE)
plot(aa)
membership(aa)
decompose.graph(aa)
clusters(aa)
bb = decompose.graph(aa)
plot(bb[[1]])
induced.subgraph
decompose.graph
library(data.table)
library(dplyr)
setwd("~/Downloads/Kaggle/hm")
articles = fread("./articles.csv")
customers = fread("./customers.csv")
trans = fread("./transactions_train.csv")
head(trans)
trans2 = copy(trans)
trans2[, customer_id := as.factor(customer_id)]
object.size(trans2)
object.size(trans)
rm(trans2)
gc()
trans[customer_id == "000058a12d5b43e67d225668fa1f8d618c13dc232df0cad8ffe7ad4a1091e318"]
str(trans)
indices = trans[, unique(customer_id)]
indices[, idx := 1:.N]
indices = trans[, list(customer_id = unique(customer_id))]
indices[, idx := 1:.N]
trans_2 = indices[trans]
trans_2 = merge(trans, indices, by = "customer_id", all = T)
trans_2[, customer_id := NULL]
trans_2
trans
indices[customer_id == "000058a12d5b43e67d225668fa1f8d618c13dc232df0cad8ffe7ad4a1091e318"]
trans_2[idx == 1]
trans[customer_id == "000058a12d5b43e67d225668fa1f8d618c13dc232df0cad8ffe7ad4a1091e318"]
fwrite(trans_2, "./transactions.csv" )
fwrite(indices, "./customer_indices.csv")
customers
# Map customer_id within customers
customers_2 = merge(customers, indices, by = "customer_id", all = T)
customers_2[, customer_id := NULL]
fwrite(customers_2, "./customers_m.csv" )
customers_2
pc_indices = customers[, list(pos = unique(postal_code))]
pc_indices[, pc_idx := 1:.N]
customers_2 = merge(customers, indices, by = "customer_id", all = T)
customers_2 = merge(customers, pc_indices, by = "postal_code", all = T)
pc_indices = customers[, list(postal_code = unique(postal_code))]
pc_indices[, pc_idx := 1:.N]
customers_2 = merge(customers, indices, by = "customer_id", all = T)
customers_2 = merge(customers, pc_indices, by = "postal_code", all = T)
customers_2[, customer_id := NULL]
customers_2[, postal_code := NULL]
customers_2
customers_2 = merge(customers, indices, by = "customer_id", all = T)
customers_2 = merge(customers_2, pc_indices, by = "postal_code", all = T)
customers_2[, customer_id := NULL]
customers_2[, postal_code := NULL]
customers_2
fwrite(customers_2, "./customers_m.csv" )
articles
fwrite(pc_indices, "./pc_indices.csv" )
